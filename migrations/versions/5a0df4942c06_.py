"""empty message

Revision ID: 5a0df4942c06
Revises: 3b7b9c83e00d
Create Date: 2016-08-17 15:16:29.488650

"""

# revision identifiers, used by Alembic.
revision = '5a0df4942c06'
down_revision = '3b7b9c83e00d'
branch_labels = None
depends_on = None

import db
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audio_collection_statuses',
    sa.Column('audio_collection_status_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('audio_collection_status_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('audio_collection_supervisors',
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('audio_collection_id', 'user_id')
    )
    op.create_index('audio_collection_supervisors_by_audio_collection_id', 'audio_collection_supervisors', ['audio_collection_id'], unique=False)
    op.create_index('audio_collection_supervisors_by_user_id', 'audio_collection_supervisors', ['user_id'], unique=False)
    op.create_table('audio_importers',
    sa.Column('audio_importer_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('all_performances_incomplete', sa.BOOLEAN(), server_default=sa.text(u'FALSE'), nullable=False),
    sa.PrimaryKeyConstraint('audio_importer_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('meta_data_change_methods',
    sa.Column('meta_data_change_method_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('meta_data_change_method_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('recording_platform_types',
    sa.Column('recording_platform_type_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('recording_platform_type_id'),
    sa.UniqueConstraint('name')
    )

    op.create_table('audio_collections',
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('project_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('key', sa.VARCHAR(length=6), nullable=True),
    sa.Column('audio_collection_status_id', sa.INTEGER(), nullable=False),
    sa.Column('archive_file', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['audio_collection_status_id'], ['audio_collection_statuses.audio_collection_status_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.projectid'], ),
    sa.PrimaryKeyConstraint('audio_collection_id'),
    sa.UniqueConstraint('project_id', 'name')
    )
    op.create_index('audio_collections_by_project_id', 'audio_collections', ['project_id'], unique=False)

    op.create_table('album_meta_categories',
    sa.Column('album_meta_category_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('validator', postgresql.JSONB(), nullable=False),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.PrimaryKeyConstraint('album_meta_category_id'),
    sa.UniqueConstraint('audio_collection_id', 'name')
    )
    op.create_index('album_meta_categories_by_audio_collection_id', 'album_meta_categories', ['audio_collection_id'], unique=False)
    op.create_table('audio_collection_status_log',
    sa.Column('log_entry_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('from_audio_collection_status_id', sa.INTEGER(), nullable=False),
    sa.Column('to_audio_collection_status_id', sa.INTEGER(), nullable=False),
    sa.Column('changed_by', sa.INTEGER(), nullable=False),
    sa.Column('changed_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['changed_by'], ['users.userid'], ),
    sa.ForeignKeyConstraint(['from_audio_collection_status_id'], ['audio_collection_statuses.audio_collection_status_id'], ),
    sa.ForeignKeyConstraint(['to_audio_collection_status_id'], ['audio_collection_statuses.audio_collection_status_id'], ),
    sa.PrimaryKeyConstraint('log_entry_id')
    )
    op.create_index('audio_collections_status_log_audio_collection_id', 'audio_collection_status_log', ['audio_collection_id'], unique=False)
    op.create_table('meta_data_change_log',
    sa.Column('log_entry_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('meta_data_change_method_id', sa.INTEGER(), nullable=False),
    sa.Column('info', postgresql.JSONB(), nullable=False),
    sa.Column('changed_by', sa.INTEGER(), nullable=False),
    sa.Column('changed_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['meta_data_change_method_id'], ['meta_data_change_methods.meta_data_change_method_id'], ),
    sa.PrimaryKeyConstraint('log_entry_id')
    )
    op.create_index('meta_data_change_log_by_audio_collection_id', 'meta_data_change_log', ['audio_collection_id'], unique=False)
    op.create_table('meta_data_change_requests',
    sa.Column('meta_data_change_request_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('meta_data_change_method_id', sa.INTEGER(), nullable=False),
    sa.Column('info', postgresql.JSONB(), nullable=False),
    sa.Column('requested_by', sa.INTEGER(), nullable=False),
    sa.Column('requested_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('status', sa.TEXT(), nullable=False),
    sa.Column('checked_by', sa.INTEGER(), nullable=False),
    sa.Column('checked_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.CheckConstraint(u"status IN ('Pending', 'Rejected', 'Accepted')"),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['checked_by'], ['users.userid'], ),
    sa.ForeignKeyConstraint(['meta_data_change_method_id'], ['meta_data_change_methods.meta_data_change_method_id'], ),
    sa.ForeignKeyConstraint(['requested_by'], ['users.userid'], ),
    sa.PrimaryKeyConstraint('meta_data_change_request_id')
    )
    op.create_index('meta_data_change_requests_by_audio_collection_id', 'meta_data_change_requests', ['audio_collection_id'], unique=False)
    op.create_table('recording_platforms',
    sa.Column('recording_platform_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('recording_platform_type_id', sa.INTEGER(), nullable=False),
    sa.Column('storage_location', sa.TEXT(), nullable=True),
    sa.Column('index', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('audio_importer_id', sa.INTEGER(), nullable=True),
    sa.Column('default_audio_spec', postgresql.JSONB(), nullable=True),
    sa.Column('master_script_file', postgresql.JSONB(), nullable=True),
    sa.Column('master_hypothesis_file', postgresql.JSONB(), nullable=True),
    sa.Column('config', postgresql.JSONB(), nullable=True),
    sa.CheckConstraint(u'"index" >= 0'),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['audio_importer_id'], ['audio_importers.audio_importer_id'], ),
    sa.ForeignKeyConstraint(['recording_platform_type_id'], ['recording_platform_types.recording_platform_type_id'], ),
    sa.PrimaryKeyConstraint('recording_platform_id'),
    sa.UniqueConstraint('audio_collection_id', 'index'),
    sa.UniqueConstraint('audio_collection_id', 'name')
    )
    op.create_index('recording_platforms_by_audio_collection_id', 'recording_platforms', ['audio_collection_id'], unique=False)
    op.create_table('speaker_meta_categories',
    sa.Column('speaker_meta_category_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('validator', postgresql.JSONB(), nullable=False),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.PrimaryKeyConstraint('speaker_meta_category_id'),
    sa.UniqueConstraint('audio_collection_id', 'name')
    )
    op.create_index('speaker_meta_categories_by_audio_collection_id', 'speaker_meta_categories', ['audio_collection_id'], unique=False)
    op.create_table('speakers',
    sa.Column('speaker_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('identifier', sa.TEXT(), nullable=False),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.PrimaryKeyConstraint('speaker_id'),
    sa.UniqueConstraint('audio_collection_id', 'identifier')
    )
    op.create_index('speakers_by_audio_collection_id', 'speakers', ['audio_collection_id'], unique=False)
    op.create_table('albums',
    sa.Column('album_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('speaker_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['speaker_id'], ['speakers.speaker_id'], ),
    sa.PrimaryKeyConstraint('album_id')
    )
    op.create_index('albums_by_audio_collection_id', 'albums', ['audio_collection_id'], unique=False)
    op.create_index('albums_by_speaker_id', 'albums', ['speaker_id'], unique=False)
    op.create_table('channels',
    sa.Column('channel_id', sa.INTEGER(), nullable=False),
    sa.Column('recording_platform_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('channel_index', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['recording_platform_id'], ['recording_platforms.recording_platform_id'], ),
    sa.PrimaryKeyConstraint('channel_id'),
    sa.UniqueConstraint('recording_platform_id', 'channel_index'),
    sa.UniqueConstraint('recording_platform_id', 'name')
    )
    op.create_index('channels_by_recording_platform_id', 'channels', ['recording_platform_id'], unique=False)
    op.create_table('corpus_codes',
    sa.Column('corpus_code_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('recording_platform_id', sa.INTEGER(), nullable=False),
    sa.Column('code', sa.TEXT(), nullable=False),
    sa.Column('requires_cutup', sa.BOOLEAN(), nullable=False),
    sa.Column('included', sa.BOOLEAN(), nullable=True),
    sa.Column('regex', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['recording_platform_id'], ['recording_platforms.recording_platform_id'], ),
    sa.PrimaryKeyConstraint('corpus_code_id'),
    sa.UniqueConstraint('audio_collection_id', 'code')
    )
    op.create_index('corpus_codes_by_audio_collection_id', 'corpus_codes', ['audio_collection_id'], unique=False)
    op.create_table('performance_meta_categories',
    sa.Column('performance_meta_category_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('recording_platform_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('extractor', postgresql.JSONB(), nullable=True),
    sa.Column('validator', postgresql.JSONB(), nullable=False),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['recording_platform_id'], ['recording_platforms.recording_platform_id'], ),
    sa.PrimaryKeyConstraint('performance_meta_category_id'),
    sa.UniqueConstraint('audio_collection_id', 'name')
    )
    op.create_index('performance_meta_categories_by_audio_collection_id', 'performance_meta_categories', ['audio_collection_id'], unique=False)
    op.create_table('recording_meta_categories',
    sa.Column('recording_meta_category_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('recording_platform_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('validator', postgresql.JSONB(), nullable=False),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['recording_platform_id'], ['recording_platforms.recording_platform_id'], ),
    sa.PrimaryKeyConstraint('recording_meta_category_id'),
    sa.UniqueConstraint('audio_collection_id', 'name')
    )
    op.create_index('recording_meta_categories_by_audio_collection_id', 'recording_meta_categories', ['audio_collection_id'], unique=False)
    op.create_table('speaker_meta_values',
    sa.Column('speaker_meta_value_id', sa.INTEGER(), nullable=False),
    sa.Column('speaker_meta_category_id', sa.INTEGER(), nullable=False),
    sa.Column('speaker_id', sa.INTEGER(), nullable=False),
    sa.Column('value', postgresql.JSONB(), nullable=False),
    sa.ForeignKeyConstraint(['speaker_id'], ['speakers.speaker_id'], ),
    sa.ForeignKeyConstraint(['speaker_meta_category_id'], ['speaker_meta_categories.speaker_meta_category_id'], ),
    sa.PrimaryKeyConstraint('speaker_meta_value_id'),
    sa.UniqueConstraint('speaker_meta_category_id', 'speaker_id')
    )
    op.create_index('speaker_meta_values_by_speaker_id', 'speaker_meta_values', ['speaker_id'], unique=False)
    op.create_index('speaker_meta_values_by_speaker_meta_category_id', 'speaker_meta_values', ['speaker_meta_category_id'], unique=False)
    op.create_table('album_meta_values',
    sa.Column('album_meta_value_id', sa.INTEGER(), nullable=False),
    sa.Column('album_meta_category_id', sa.INTEGER(), nullable=False),
    sa.Column('album_id', sa.INTEGER(), nullable=False),
    sa.Column('value', postgresql.JSONB(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['albums.album_id'], ),
    sa.ForeignKeyConstraint(['album_meta_category_id'], ['album_meta_categories.album_meta_category_id'], ),
    sa.PrimaryKeyConstraint('album_meta_value_id'),
    sa.UniqueConstraint('album_meta_category_id', 'album_id')
    )
    op.create_index('album_meta_values_by_album_id', 'album_meta_values', ['album_id'], unique=False)
    op.create_index('album_meta_values_by_album_meta_category_id', 'album_meta_values', ['album_meta_category_id'], unique=False)
    op.create_table('performances',
    sa.Column('performance_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('album_id', sa.INTEGER(), nullable=True),
    sa.Column('recording_platform_id', sa.INTEGER(), nullable=False),
    sa.Column('script_id', sa.TEXT(), nullable=True),
    sa.Column('name', sa.TEXT(), nullable=True),
    sa.Column('data', postgresql.JSONB(), nullable=True),
    sa.Column('key', sa.VARCHAR(length=8), nullable=True),
    sa.Column('imported_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['albums.album_id'], ),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['recording_platform_id'], ['recording_platforms.recording_platform_id'], ),
    sa.PrimaryKeyConstraint('performance_id')
    )
    op.create_index('performances_by_album_id', 'performances', ['album_id'], unique=False)
    op.create_index('performances_by_audio_collection_id', 'performances', ['audio_collection_id'], unique=False)
    op.create_index('performances_by_recording_platform_id', 'performances', ['recording_platform_id'], unique=False)
    op.create_table('performance_meta_values',
    sa.Column('performance_meta_value_id', sa.INTEGER(), nullable=False),
    sa.Column('performance_meta_category_id', sa.INTEGER(), nullable=False),
    sa.Column('performance_id', sa.INTEGER(), nullable=False),
    sa.Column('value', postgresql.JSONB(), nullable=False),
    sa.ForeignKeyConstraint(['performance_id'], ['performances.performance_id'], ),
    sa.ForeignKeyConstraint(['performance_meta_category_id'], ['performance_meta_categories.performance_meta_category_id'], ),
    sa.PrimaryKeyConstraint('performance_meta_value_id'),
    sa.UniqueConstraint('performance_meta_category_id', 'performance_id')
    )
    op.create_index('performance_meta_values_by_performance_id', 'performance_meta_values', ['performance_id'], unique=False)
    op.create_index('performance_meta_values_by_performance_meta_category_id', 'performance_meta_values', ['performance_meta_category_id'], unique=False)
    op.create_table('recordings',
    sa.Column('recording_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('recording_platform_id', sa.INTEGER(), nullable=False),
    sa.Column('performance_id', sa.INTEGER(), nullable=False),
    sa.Column('corpus_code_id', sa.INTEGER(), nullable=False),
    sa.Column('prompt', sa.TEXT(), nullable=True),
    sa.Column('hypothesis', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['corpus_code_id'], ['corpus_codes.corpus_code_id'], ),
    sa.ForeignKeyConstraint(['performance_id'], ['performances.performance_id'], ),
    sa.ForeignKeyConstraint(['recording_platform_id'], ['recording_platforms.recording_platform_id'], ),
    sa.PrimaryKeyConstraint('recording_id')
    )
    op.create_index('recordings_by_audio_collection_id', 'recordings', ['audio_collection_id'], unique=False)
    op.create_index('recordings_by_performance_id', 'recordings', ['performance_id'], unique=False)
    op.create_table('audio_files',
    sa.Column('audio_file_id', sa.INTEGER(), nullable=False),
    sa.Column('recording_id', sa.INTEGER(), nullable=False),
    sa.Column('audio_collection_id', sa.INTEGER(), nullable=False),
    sa.Column('recording_platform_id', sa.INTEGER(), nullable=False),
    sa.Column('channel_id', sa.INTEGER(), nullable=False),
    sa.Column('file_path', sa.TEXT(), nullable=False),
    sa.Column('audio_spec', postgresql.JSONB(), nullable=False),
    sa.Column('audio_data_location', postgresql.JSONB(), nullable=False),
    sa.Column('duration', postgresql.INTERVAL(), nullable=False),
    sa.Column('stats', postgresql.JSONB(), nullable=False),
    sa.ForeignKeyConstraint(['audio_collection_id'], ['audio_collections.audio_collection_id'], ),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.channel_id'], ),
    sa.ForeignKeyConstraint(['recording_id'], ['recordings.recording_id'], ),
    sa.ForeignKeyConstraint(['recording_platform_id'], ['recording_platforms.recording_platform_id'], ),
    sa.PrimaryKeyConstraint('audio_file_id'),
    sa.UniqueConstraint('file_path')
    )
    op.create_index('audio_files_by_recording_id', 'audio_files', ['recording_id'], unique=False)
    op.create_table('recording_meta_values',
    sa.Column('recording_meta_value_id', sa.INTEGER(), nullable=False),
    sa.Column('recording_meta_category_id', sa.INTEGER(), nullable=False),
    sa.Column('recording_id', sa.INTEGER(), nullable=False),
    sa.Column('value', postgresql.JSONB(), nullable=False),
    sa.ForeignKeyConstraint(['recording_id'], ['recordings.recording_id'], ),
    sa.ForeignKeyConstraint(['recording_meta_category_id'], ['recording_meta_categories.recording_meta_category_id'], ),
    sa.PrimaryKeyConstraint('recording_meta_value_id'),
    sa.UniqueConstraint('recording_meta_category_id', 'recording_id')
    )
    op.create_index('recording_meta_values_by_recording_id', 'recording_meta_values', ['recording_id'], unique=False)
    op.create_index('recording_meta_values_by_recording_meta_category_id', 'recording_meta_values', ['recording_meta_category_id'], unique=False)

    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('recording_meta_values_by_recording_meta_category_id', table_name='recording_meta_values')
    op.drop_index('recording_meta_values_by_recording_id', table_name='recording_meta_values')
    op.drop_table('recording_meta_values')
    op.drop_index('audio_files_by_recording_id', table_name='audio_files')
    op.drop_table('audio_files')
    op.drop_index('recordings_by_performance_id', table_name='recordings')
    op.drop_index('recordings_by_audio_collection_id', table_name='recordings')
    op.drop_table('recordings')
    op.drop_index('performance_meta_values_by_performance_meta_category_id', table_name='performance_meta_values')
    op.drop_index('performance_meta_values_by_performance_id', table_name='performance_meta_values')
    op.drop_table('performance_meta_values')
    op.drop_index('performances_by_recording_platform_id', table_name='performances')
    op.drop_index('performances_by_audio_collection_id', table_name='performances')
    op.drop_index('performances_by_album_id', table_name='performances')
    op.drop_table('performances')
    op.drop_index('album_meta_values_by_album_meta_category_id', table_name='album_meta_values')
    op.drop_index('album_meta_values_by_album_id', table_name='album_meta_values')
    op.drop_table('album_meta_values')
    op.drop_index('speaker_meta_values_by_speaker_meta_category_id', table_name='speaker_meta_values')
    op.drop_index('speaker_meta_values_by_speaker_id', table_name='speaker_meta_values')
    op.drop_table('speaker_meta_values')
    op.drop_index('recording_meta_categories_by_audio_collection_id', table_name='recording_meta_categories')
    op.drop_table('recording_meta_categories')
    op.drop_index('performance_meta_categories_by_audio_collection_id', table_name='performance_meta_categories')
    op.drop_table('performance_meta_categories')
    op.drop_index('corpus_codes_by_audio_collection_id', table_name='corpus_codes')
    op.drop_table('corpus_codes')
    op.drop_index('channels_by_recording_platform_id', table_name='channels')
    op.drop_table('channels')
    op.drop_index('albums_by_speaker_id', table_name='albums')
    op.drop_index('albums_by_audio_collection_id', table_name='albums')
    op.drop_table('albums')
    op.drop_index('speakers_by_audio_collection_id', table_name='speakers')
    op.drop_table('speakers')
    op.drop_index('speaker_meta_categories_by_audio_collection_id', table_name='speaker_meta_categories')
    op.drop_table('speaker_meta_categories')
    op.drop_index('recording_platforms_by_audio_collection_id', table_name='recording_platforms')
    op.drop_table('recording_platforms')
    op.drop_index('meta_data_change_requests_by_audio_collection_id', table_name='meta_data_change_requests')
    op.drop_table('meta_data_change_requests')
    op.drop_index('meta_data_change_log_by_audio_collection_id', table_name='meta_data_change_log')
    op.drop_table('meta_data_change_log')
    op.drop_index('audio_collections_status_log_audio_collection_id', table_name='audio_collection_status_log')
    op.drop_table('audio_collection_status_log')
    op.drop_index('album_meta_categories_by_audio_collection_id', table_name='album_meta_categories')
    op.drop_table('album_meta_categories')
    op.drop_index('audio_collections_by_project_id', table_name='audio_collections')
    op.drop_table('audio_collections')
    op.drop_table('recording_platform_types')
    op.drop_table('meta_data_change_methods')
    op.drop_table('audio_importers')
    op.drop_index('audio_collection_supervisors_by_user_id', table_name='audio_collection_supervisors')
    op.drop_index('audio_collection_supervisors_by_audio_collection_id', table_name='audio_collection_supervisors')
    op.drop_table('audio_collection_supervisors')
    op.drop_table('audio_collection_statuses')
    ### end Alembic commands ###
