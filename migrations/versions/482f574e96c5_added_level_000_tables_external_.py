"""added level 000 tables, (external dependencies of ao/pdb)

Revision ID: 482f574e96c5
Revises: 
Create Date: 2015-11-30 14:02:36.051532

"""

# revision identifiers, used by Alembic.
revision = '482f574e96c5'
down_revision = None
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ao_payment_classes',
    sa.Column('paymentclassid', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text(u'now()'), nullable=True),
    sa.PrimaryKeyConstraint('paymentclassid', name=op.f('pk_ao_payment_classes')),
    sa.UniqueConstraint('name', name=op.f('uq_ao_payment_classes_name'))
    )
    op.create_table('ao_payment_types',
    sa.Column('paymenttypeid', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text(u'now()'), nullable=True),
    sa.PrimaryKeyConstraint('paymenttypeid', name=op.f('pk_ao_payment_types')),
    sa.UniqueConstraint('name', name=op.f('uq_ao_payment_types_name'))
    )
    op.create_table('ao_payrolls',
    sa.Column('payrollid', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('startdate', sa.Date(), nullable=False),
    sa.Column('enddate', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('payrollid', name=op.f('pk_ao_payrolls'))
    )
    op.create_table('ao_users',
    sa.Column('userid', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('emailaddress', sa.Text(), nullable=False),
    sa.Column('active', sa.Text(), server_default=sa.text(u'TRUE'), nullable=False),
    sa.Column('familyname', sa.Text(), nullable=True),
    sa.Column('givenname', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('userid', name=op.f('pk_ao_users'))
    )
    op.create_table('pdb_projects',
    sa.Column('project_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('project_id', name=op.f('pk_pdb_projects')),
    sa.UniqueConstraint('name', name=op.f('uq_pdb_projects_name'))
    )
    op.create_table('pdb_tasks',
    sa.Column('task_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('work_area', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['pdb_projects.project_id'], name=op.f('fk_pdb_tasks_project_id_pdb_projects')),
    sa.PrimaryKeyConstraint('task_id', name=op.f('pk_pdb_tasks'))
    )
    op.create_table('database_settings',
    sa.Column('seeded', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('seeded')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('database_settings')
    op.drop_table('pdb_tasks')
    op.drop_table('pdb_projects')
    op.drop_table('ao_users')
    op.drop_table('ao_payrolls')
    op.drop_table('ao_payment_types')
    op.drop_table('ao_payment_classes')
    ### end Alembic commands ###
