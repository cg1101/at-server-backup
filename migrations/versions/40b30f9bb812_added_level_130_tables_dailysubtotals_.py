"""added level 130 tables dailysubtotals/defaultqaconfiguration/qaconfigurationentries/subtaskrates/utteranceselections/workintervals/taskusers

Revision ID: 40b30f9bb812
Revises: 191c062cdb77
Create Date: 2015-11-30 14:47:51.417118

"""

# revision identifiers, used by Alembic.
revision = '40b30f9bb812'
down_revision = '191c062cdb77'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dailysubtasktotals',
    sa.Column('totalid', sa.INTEGER(), nullable=False),
    sa.Column('totaldate', sa.DATE(), nullable=False),
    sa.Column('subtaskid', sa.INTEGER(), nullable=False),
    sa.Column('userid', sa.INTEGER(), nullable=False),
    sa.Column('amount', sa.INTEGER(), nullable=False),
    sa.Column('words', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['subtaskid'], [u'subtasks.subtaskid'], name=u'dailysubtasktotals_subtaskid_fkey'),
    sa.ForeignKeyConstraint(['userid'], [u'users.userid'], name=u'dailysubtasktotals_userid_fkey'),
    sa.PrimaryKeyConstraint(u'totalid', name=op.f('pk_dailysubtasktotals'))
    )
    op.create_index('dailysubtasktotals_totaldate_key', 'dailysubtasktotals', ['totaldate', 'subtaskid', 'userid'], unique=True)
    op.create_index('dailysubtasktotalsbysubtaskid', 'dailysubtasktotals', ['subtaskid'], unique=False)
    op.create_index('dailysubtasktotalsbytotaldate', 'dailysubtasktotals', ['totaldate'], unique=False)
    op.create_index('dailysubtasktotalsbyuserid', 'dailysubtasktotals', ['userid'], unique=False)
    op.create_table('defaultqaconfiguration',
    sa.Column('worksubtaskid', sa.INTEGER(), nullable=False),
    sa.Column('qasubtaskid', sa.INTEGER(), nullable=False),
    sa.Column('samplingerror', postgresql.DOUBLE_PRECISION(), nullable=False),
    sa.Column('defaultexpectedaccuracy', postgresql.DOUBLE_PRECISION(), nullable=False),
    sa.Column('confidenceinterval', postgresql.DOUBLE_PRECISION(), nullable=False),
    sa.Column('reworksubtaskid', sa.INTEGER(), nullable=True),
    sa.Column('accuracythreshold', postgresql.DOUBLE_PRECISION(), nullable=True),
    sa.Column('populaterework', sa.BOOLEAN(), server_default=sa.text(u'false'), nullable=True),
    sa.Column('updatedby', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['qasubtaskid'], [u'subtasks.subtaskid'], name=u'defaultqaconfiguration_qasubtaskid_fkey'),
    sa.ForeignKeyConstraint(['worksubtaskid'], [u'subtasks.subtaskid'], name=u'defaultqaconfiguration_worksubtaskid_fkey'),
    sa.PrimaryKeyConstraint(u'worksubtaskid', name=op.f('pk_defaultqaconfiguration'))
    )
    op.create_table('qaconfigurationentries',
    sa.Column('entryid', sa.INTEGER(), nullable=False),
    sa.Column('worksubtaskid', sa.INTEGER(), nullable=False),
    sa.Column('orderindex', sa.INTEGER(), nullable=False),
    sa.Column('qasubtaskid', sa.INTEGER(), nullable=False),
    sa.Column('samplingerror', postgresql.DOUBLE_PRECISION(), nullable=False),
    sa.Column('defaultexpectedaccuracy', postgresql.DOUBLE_PRECISION(), nullable=False),
    sa.Column('confidenceinterval', postgresql.DOUBLE_PRECISION(), nullable=False),
    sa.ForeignKeyConstraint(['qasubtaskid'], [u'subtasks.subtaskid'], name=u'qaconfigurationentries_qasubtaskid_fkey'),
    sa.ForeignKeyConstraint(['worksubtaskid'], [u'subtasks.subtaskid'], name=u'qaconfigurationentries_worksubtaskid_fkey'),
    sa.PrimaryKeyConstraint(u'entryid', name=op.f('pk_qaconfigurationentries'))
    )
    op.create_index('qaconfigurationentries_worksubtaskid_key', 'qaconfigurationentries', ['worksubtaskid', 'orderindex'], unique=True)
    op.create_table('subtaskrates',
    sa.Column('subtaskrateid', sa.INTEGER(), nullable=False),
    sa.Column('subtaskid', sa.INTEGER(), nullable=False),
    sa.Column('taskid', sa.INTEGER(), nullable=False),
    sa.Column('rateid', sa.INTEGER(), nullable=False),
    sa.Column('validfrom', postgresql.TIMESTAMP(), server_default=sa.text(u'now()'), nullable=False),
    sa.Column('multiplier', postgresql.DOUBLE_PRECISION(), server_default=sa.text(u'1'), nullable=False),
    sa.Column('updatedby', sa.INTEGER(), nullable=False),
    sa.Column('updatedat', postgresql.TIMESTAMP(), server_default=sa.text(u'now()'), nullable=True),
    sa.ForeignKeyConstraint(['rateid'], [u'rates.rateid'], name=u'subtaskrates_rateid_fkey'),
    sa.ForeignKeyConstraint(['subtaskid'], [u'subtasks.subtaskid'], name=u'subtaskrates_subtaskid_fkey'),
    sa.ForeignKeyConstraint(['taskid'], [u'tasks.taskid'], name=u'subtaskrates_taskid_fkey'),
    sa.PrimaryKeyConstraint(u'subtaskrateid', name=op.f('pk_subtaskrates'))
    )
    op.create_table('taskusers',
    sa.Column('userid', sa.INTEGER(), nullable=False),
    sa.Column('taskid', sa.INTEGER(), nullable=False),
    sa.Column('subtaskid', sa.INTEGER(), nullable=False),
    sa.Column('isnew', sa.BOOLEAN(), server_default=sa.text(u'true'), nullable=False),
    sa.Column('removed', sa.BOOLEAN(), server_default=sa.text(u'false'), nullable=False),
    sa.Column('paymentfactor', postgresql.DOUBLE_PRECISION(), server_default=sa.text(u'1'), nullable=False),
    sa.Column('hasreadinstructions', sa.BOOLEAN(), server_default=sa.text(u'FALSE'), nullable=False),
    sa.ForeignKeyConstraint(['subtaskid'], [u'subtasks.subtaskid'], name=u'taskusers_subtaskid_fkey'),
    sa.ForeignKeyConstraint(['taskid'], [u'tasks.taskid'], name=u'taskusers_taskid_fkey'),
    sa.ForeignKeyConstraint(['userid'], [u'users.userid'], name=u'taskusers_userid_fkey'),
    sa.PrimaryKeyConstraint(u'userid', u'taskid', u'subtaskid', name=op.f('pk_taskusers'))
    )
    op.create_table('utteranceselections',
    sa.Column('selectionid', sa.INTEGER(), nullable=False),
    sa.Column('taskid', sa.INTEGER(), nullable=False),
    sa.Column('userid', sa.INTEGER(), nullable=False),
    sa.Column('limitrestriction', sa.INTEGER(), nullable=True),
    sa.Column('selected', postgresql.TIMESTAMP(), server_default=sa.text(u'now()'), nullable=False),
    sa.Column('action', sa.TEXT(), nullable=True),
    sa.Column('subtaskid', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.TEXT(), nullable=True),
    sa.Column('processed', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('random', sa.BOOLEAN(), server_default=sa.text(u'false'), nullable=True),
    sa.ForeignKeyConstraint(['subtaskid'], [u'subtasks.subtaskid'], name=u'utteranceselections_subtaskid_fkey'),
    sa.ForeignKeyConstraint(['taskid'], [u'tasks.taskid'], name=u'utteranceselections_taskid_fkey'),
    sa.ForeignKeyConstraint(['userid'], [u'users.userid'], name=u'utteranceselections_userid_fkey'),
    sa.PrimaryKeyConstraint(u'selectionid', name=op.f('pk_utteranceselections'))
    )
    op.create_table('workintervals',
    sa.Column('workintervalid', sa.INTEGER(), nullable=False),
    sa.Column('taskid', sa.INTEGER(), nullable=False),
    sa.Column('subtaskid', sa.INTEGER(), nullable=False),
    sa.Column('starttime', postgresql.TIMESTAMP(), server_default=sa.text(u'now()'), nullable=False),
    sa.Column('endtime', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('intervalstatus', sa.TEXT(), server_default=sa.text(u"'current'::text"), nullable=False),
    sa.ForeignKeyConstraint(['subtaskid'], [u'subtasks.subtaskid'], name=u'workintervals_subtaskid_fkey'),
    sa.ForeignKeyConstraint(['taskid', 'subtaskid'], [u'subtasks.taskid', u'subtasks.subtaskid'], name=u'workintervals_taskid_fkey1'),
    sa.ForeignKeyConstraint(['taskid'], [u'tasks.taskid'], name=u'workintervals_taskid_fkey'),
    sa.PrimaryKeyConstraint(u'workintervalid', name=op.f('pk_workintervals'))
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workintervals')
    op.drop_table('utteranceselections')
    op.drop_table('taskusers')
    op.drop_table('subtaskrates')
    op.drop_index('qaconfigurationentries_worksubtaskid_key', table_name='qaconfigurationentries')
    op.drop_table('qaconfigurationentries')
    op.drop_table('defaultqaconfiguration')
    op.drop_index('dailysubtasktotalsbyuserid', table_name='dailysubtasktotals')
    op.drop_index('dailysubtasktotalsbytotaldate', table_name='dailysubtasktotals')
    op.drop_index('dailysubtasktotalsbysubtaskid', table_name='dailysubtasktotals')
    op.drop_index('dailysubtasktotals_totaldate_key', table_name='dailysubtasktotals')
    op.drop_table('dailysubtasktotals')
    ### end Alembic commands ###
