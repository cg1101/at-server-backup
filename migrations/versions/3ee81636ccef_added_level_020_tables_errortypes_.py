"""added level 020 tables errortypes/filehandleroptions/labelgroups/ratedetails/tags

Revision ID: 3ee81636ccef
Revises: 4be0f87ef6cb
Create Date: 2015-11-30 14:08:40.513644

"""

# revision identifiers, used by Alembic.
revision = '3ee81636ccef'
down_revision = '4be0f87ef6cb'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('errortypes',
    sa.Column('errortypeid', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('errorclassid', sa.INTEGER(), nullable=False),
    sa.Column('defaultseverity', postgresql.DOUBLE_PRECISION(), nullable=False),
    sa.Column('isstandard', sa.BOOLEAN(), server_default=sa.text(u'true'), nullable=False),
    sa.ForeignKeyConstraint(['errorclassid'], [u'errorclasses.errorclassid'], name=u'errortypes_errorclassid_fkey'),
    sa.PrimaryKeyConstraint(u'errortypeid', name=op.f('pk_errortypes'))
    )
    op.create_index(op.f('ix_errortypes_name'), 'errortypes', ['name'], unique=True)
    op.create_table('filehandleroptions',
    sa.Column('optionid', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('label', sa.TEXT(), nullable=True),
    sa.Column('handlerid', sa.INTEGER(), nullable=False),
    sa.Column('datatype', sa.TEXT(), nullable=False),
    sa.Column('widgettype', sa.TEXT(), nullable=True),
    sa.Column('params', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['handlerid'], [u'filehandlers.handlerid'], name=op.f('fk_filehandleroptions_handlerid_filehandlers')),
    sa.PrimaryKeyConstraint(u'optionid', name=op.f('pk_filehandleroptions'))
    )
    op.create_index(op.f('ix_filehandleroptions_name'), 'filehandleroptions', ['name', 'handlerid'], unique=True)
    op.create_table('labelgroups',
    sa.Column('labelgroupid', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('ismandatory', sa.BOOLEAN(), server_default=sa.text(u'false'), nullable=False),
    sa.Column('labelsetid', sa.INTEGER(), nullable=False),
    sa.Column('dropdowndisplay', sa.BOOLEAN(), server_default=sa.text(u'false'), nullable=False),
    sa.ForeignKeyConstraint(['labelsetid'], [u'labelsets.labelsetid'], name=u'labelgroups_labelsetid_fkey'),
    sa.PrimaryKeyConstraint(u'labelgroupid', name=op.f('pk_labelgroups'))
    )
    op.create_index('labelgroups_labelsetid_key', 'labelgroups', ['labelsetid', 'name'], unique=True)
    op.create_table('ratedetails',
    sa.Column('rateid', sa.INTEGER(), nullable=False),
    sa.Column('centsperutt', postgresql.DOUBLE_PRECISION(), nullable=False),
    sa.Column('accuracy', postgresql.DOUBLE_PRECISION(), nullable=False),
    sa.ForeignKeyConstraint(['rateid'], [u'rates.rateid'], name=u'ratedetails_rateid_fkey'),
    sa.PrimaryKeyConstraint(u'rateid', u'accuracy', name=op.f('pk_ratedetails'))
    ) 
    op.create_table('tags',
    sa.Column('tagid', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('tagsetid', sa.INTEGER(), nullable=False),
    sa.Column('tagtype', sa.TEXT(), nullable=False),
    sa.Column('colour', sa.TEXT(), nullable=True),
    sa.Column('isforeground', sa.BOOLEAN(), nullable=True),
    sa.Column('image', sa.LargeBinary(), nullable=True),
    sa.Column('extractstart', sa.TEXT(), nullable=False),
    sa.Column('extractend', sa.TEXT(), nullable=True),
    sa.Column('shortcutkey', sa.CHAR(length=1), nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), server_default=sa.text(u'true'), nullable=False),
    sa.Column('surround', sa.BOOLEAN(), nullable=False),
    sa.Column('extend', sa.BOOLEAN(), nullable=False),
    sa.Column('split', sa.BOOLEAN(), nullable=False),
    sa.Column('tooltip', sa.TEXT(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('isdynamic', sa.BOOLEAN(), server_default=sa.text(u'false'), nullable=False),
    sa.ForeignKeyConstraint(['tagsetid'], [u'tagsets.tagsetid'], name=u'tags_tagsetid_fkey'),
    sa.PrimaryKeyConstraint(u'tagid', name=op.f('pk_tags'))
    )
    op.create_index(op.f('ix_tags_colour'), 'tags', ['colour', 'isforeground', 'tagsetid'], unique=True)
    op.create_index(op.f('ix_tags_tagsetid'), 'tags', ['tagsetid', 'name'], unique=True)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tags_tagsetid'), table_name='tags')
    op.drop_index(op.f('ix_tags_colour'), table_name='tags')
    op.drop_table('tags')
    op.drop_table('ratedetails')
    op.drop_index('labelgroups_labelsetid_key', table_name='labelgroups')
    op.drop_table('labelgroups')
    op.drop_index(op.f('ix_filehandleroptions_name'), table_name='filehandleroptions')
    op.drop_table('filehandleroptions')
    op.drop_index(op.f('ix_errortypes_name'), table_name='errortypes')
    op.drop_table('errortypes')
    ### end Alembic commands ###
